name: devenv
on: [push, workflow_dispatch]

env:
  OWNER: idelchi
  BRANCH: ${{ github.head_ref || github.ref_name }}
  IMAGE: idelchi/devenv

jobs:
  info:
    runs-on: ubuntu-22.04
    steps:
      - run: |
          echo github.actor ${{ github.actor }}
          echo github.event_name: ${{ github.event_name }}
          echo runner.os: ${{ runner.os }}
          echo github.repository: ${{ github.repository }}
          echo github.ref: ${{ github.ref }}
          echo github.head_ref: ${{ github.head_ref }}
          echo github.ref_name: ${{ github.ref_name }}
          echo whoami: $(whoami)

  validate:
    runs-on: ubuntu-22.04
    # needs: [info]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.OWNER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      # Load it into the local Docker daemon, and make the cache available to the next step
      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          load: true
          tags: ${{ env.IMAGE }}:dev
          cache-from: type=registry,ref=${{ env.IMAGE }}:dev

      # Run the minimum required tests to validate the image
      - run: docker compose run --rm devenv task lint:all

      # Push the image to Docker Hub
      # Use the cache from the previous step
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.IMAGE }}:dev
          cache-to: type=inline


  docker:
    runs-on: ubuntu-22.04
    needs: [validate]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.OWNER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE }}:dev
# https://docs.github.com/en/actions/learn-github-actions/contexts#vars-context
# https://docs.github.com/en/actions/learn-github-actions/variables
# https://stackoverflow.com/questions/63318776/how-to-cache-a-docker-image-from-a-github-action
# https://docs.docker.com/build/ci/github-actions/cache/
# https://github.com/marketplace/actions/build-and-push-docker-images#examples
# https://docs.docker.com/build/ci/github-actions/
# https://docs.docker.com/engine/reference/commandline/buildx_build/#output
